{"version":3,"file":"static/js/525.43f6da76.chunk.js","mappings":"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","sources":["components/MoveSearchList/MoveSearchList.styled.js","components/MoveSearchList/MoveSearchList.jsx","components/MoveSearch/MoveSearch,styled.js","components/MoveSearch/MoveSearch.jsx","pages/Move/Move.jsx","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n\n  text-decoration: none;\n\n  color: blue;\n\n  :active,\n  :hover {\n    color: red;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n\n  display: flex;\n  flex-direction: column;\n\n  gap: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MoviLink, List } from './MoveSearchList.styled';\n\nexport const MoveSearchList = ({ array }) => {\n  const result = array.results;\n  const location = useLocation();\n\n  return (\n    <List>\n      {result.map(({ id, title }) => {\n        return (\n          <MoviLink to={`${id}`} key={id} state={{ from: location }}>\n            {title}\n          </MoviLink>\n        );\n      })}\n    </List>\n  );\n};\n\nMoveSearchList.propTypes = {\n  array: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const SearchInput = styled(Field)`\n  width: 300px;\n  height: 40px;\n  outline: none;\n  &:active,\n  :hover,\n  :focus {\n    border-color: blue;\n  }\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n`;\n\nexport const Btn = styled.button`\n  width: 200px;\n  color: white;\n  background-color: #5f9ea0;\n\n  padding: 5px;\n  :hover,\n  :focus {\n    border-color: blue;\n    background-color: #4682b4;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { SearchInput, Btn, SearchForm } from './MoveSearch,styled';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\n\nconst schema = yup.object().shape({\n  search: yup.string().required(),\n});\n\nexport const MoveSearch = ({ onSubmit }) => {\n  return (\n    <Box mt={4}>\n      <Formik\n        initialValues={{ search: '' }}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <SearchForm>\n          <SearchInput type=\"text\" name=\"search\"></SearchInput>\n          <Btn type=\"submit\">Search</Btn>\n        </SearchForm>\n      </Formik>\n    </Box>\n  );\n};\n\nMoveSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { MoveSearchList } from 'components/MoveSearchList/MoveSearchList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovi } from 'services/api';\nimport { MoveSearch } from '../../components/MoveSearch/MoveSearch';\nimport { toast } from 'react-hot-toast';\n\nconst Move = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searthArrey, setSearthArrey] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    getSearchMovi(query).then(setSearthArrey).catch(console.log);\n  }, [query]);\n\n  useEffect(() => {\n    if (searthArrey.total_results === 0) {\n      toast.error('Nothing was found for this request');\n    }\n  }, [searthArrey]);\n\n  const updateQueryString = value => {\n    const query = value.search;\n    if (!query || query.trim() === '') {\n      toast.error('Enter a value.');\n    }\n\n    const nextParams = query !== '' ? { query } : {};\n\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <MoveSearch onSubmit={updateQueryString} />\n      {searthArrey.length !== 0 && <MoveSearchList array={searthArrey} />}\n    </>\n  );\n};\n\nexport default Move;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7440791f0a0892207a553d4050f3a946';\n\nexport async function fetchTrendigMovies() {\n  const responce = await axios.get(\n    `${API_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function fetchDetailsMovies(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getMoviesCast(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getMoviesReviews(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getSearchMovi(search) {\n  const responce = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  return responce.data;\n}\n"],"names":["MoviLink","styled","NavLink","List","MoveSearchList","result","array","results","location","useLocation","map","id","title","to","state","from","SearchInput","Field","SearchForm","Form","Btn","schema","yup","shape","search","required","MoveSearch","onSubmit","Box","mt","initialValues","validationSchema","type","name","useSearchParams","searchParams","setSearchParams","useState","searthArrey","setSearthArrey","query","get","useEffect","trim","getSearchMovi","then","catch","console","log","total_results","toast","value","length","API_URL","API_KEY","fetchTrendigMovies","axios","responce","data","fetchDetailsMovies","movie_id","getMoviesCast","getMoviesReviews"],"sourceRoot":""}