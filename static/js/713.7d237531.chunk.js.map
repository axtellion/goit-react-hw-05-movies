{"version":3,"file":"static/js/713.7d237531.chunk.js","mappings":"uPAEaA,EAAaC,EAAAA,GAAAA,IAAH,2DAKVC,EAAOD,EAAAA,GAAAA,GAAH,8FAQJE,EAAOF,EAAAA,GAAAA,GAAH,mP,6BC6BjB,EAnCa,WACX,OAA0BG,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GAAII,KAAKL,KACtB,CAACC,KAGF,SAACK,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAACX,EAAD,UACGG,GACCA,EAAMS,KACHC,MAAM,EAAG,GACTC,KAAI,YAA4C,IAAzCT,EAAwC,EAAxCA,GAAIU,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxBC,EAAcH,EAAY,UAjB9B,uCAiB8B,OACfA,GACbI,EAEEC,EAAiBH,GAEnB,+BACJ,OACE,UAAChB,EAAD,YACE,SAACH,EAAD,CAAYuB,IAAKH,EAAaI,IAAKN,KACnC,uBAAIA,KACJ,uBAAII,MAHKf,Y,0MC9BrBkB,EAAU,gCACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAClBH,EADkB,sCACmBC,IAFrC,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACkBJ,IAAAA,IAAA,UAClBH,EADkB,kBACDO,EADC,oBACmBN,IAFrC,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BsB,GAA7B,uFACkBJ,IAAAA,IAAA,UAClBH,EADkB,kBACDO,EADC,4BAC2BN,IAF7C,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACkBJ,IAAAA,IAAA,UAClBH,EADkB,kBACDO,EADC,4BAC2BN,IAF7C,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBP,IAAAA,IAAA,UAClBH,EADkB,gCACaC,EADb,kBAC8BS,IAFhD,cACCN,EADD,yBAIEA,EAASC,MAJX,oE","sources":["components/Cast/Cast.style.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastPoster = styled.img`\n  width: 200px;\n  height: 250px;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 328px;\n  height: 400px;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  gap: 20px;\n\n  background-color: #d3d3d3;\n  color: white;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from 'services/api';\nimport { CastPoster, Item, List } from './Cast.style';\nimport defaultImg from 'Img/error_img.jpg';\nimport { Box } from 'components/Box';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/original';\n\nconst Cast = () => {\n  const [state, setState] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getMoviesCast(id).then(setState);\n  }, [id]);\n\n  return (\n    <Box mt={4}>\n      <List>\n        {state &&\n          state.cast\n            .slice(0, 9)\n            .map(({ id, profile_path, name, character }) => {\n              const imagePoster = profile_path\n                ? `${IMG_URL}${profile_path}`\n                : defaultImg;\n\n              const characterCheck = character\n                ? character\n                : 'Ð¡haracter not specified';\n              return (\n                <Item key={id}>\n                  <CastPoster src={imagePoster} alt={name} />\n                  <p>{name}</p>\n                  <p>{characterCheck}</p>\n                </Item>\n              );\n            })}\n      </List>\n    </Box>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7440791f0a0892207a553d4050f3a946';\n\nexport async function fetchTrendigMovies() {\n  const responce = await axios.get(\n    `${API_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function fetchDetailsMovies(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getMoviesCast(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getMoviesReviews(movie_id) {\n  const responce = await axios.get(\n    `${API_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n\n  return responce.data;\n}\n\nexport async function getSearchMovi(search) {\n  const responce = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  return responce.data;\n}\n"],"names":["CastPoster","styled","List","Item","useState","state","setState","id","useParams","useEffect","getMoviesCast","then","Box","mt","cast","slice","map","profile_path","name","character","imagePoster","defaultImg","characterCheck","src","alt","API_URL","API_KEY","fetchTrendigMovies","axios","responce","data","fetchDetailsMovies","movie_id","getMoviesReviews","getSearchMovi","search"],"sourceRoot":""}